<!--
This file instructs the ROOT tools what code needs to be
generated. 

1. Add a <class name=... /> line for the class you have just 
   introduced, and for any new class you have defined and have 
   used as a data member for your new class.
2. If your data product is to be a std::vector of your newly-
   invented type, add a <class name=.../> line for that vector 
   type.
3. For every data type prod to be used as top-level data product 
   (put directly into the art::Event), add a <class name=.../> 
   line for art::Wrapper<prod>.
4. Make sure to add entries for any new art::Assns you create.

For most new products, you may mimic the pattern of the BaselineData
objects below. Some of the entries are not strictly necessary, 
but add all 4 entries anyway in order to avoid possibly nasty
debugging situations.


-->



<lcgdict>

  <class name="art::Wrapper<int>"/>
  <class name="art::Wrapper<float>"/>
  <class name="art::Wrapper<double>"/>
  <class name="art::Wrapper<bool>"/>

  <class name="std::vector<std::vector<double> >"/>
  <class name="art::Wrapper<std::vector<std::vector<double> > >"/>

  <class name="arisana::EventInfo"/>
  <class name="art::Wrapper<arisana::EventInfo>"/>

  <class name="arisana::Channel"/>
  <class name="art::Wrapper<arisana::Channel>"/>
  <class name="std::vector<arisana::Channel>"/>
  <class name="art::Wrapper<std::vector<arisana::Channel> >"/>

  
  <class name="arisana::ChannelWF"/>
  <class name="art::Wrapper<arisana::ChannelWF>"/>
  <class name="std::vector<arisana::ChannelWF>"/>
  <class name="art::Wrapper<std::vector<arisana::ChannelWF> >"/>

  <class name="arisana::BaselineData"/>
  <class name="art::Wrapper<arisana::BaselineData>"/>
  <class name="std::vector<arisana::BaselineData>"/>
  <class name="art::Wrapper<std::vector<arisana::BaselineData> >"/>

</lcgdict>
